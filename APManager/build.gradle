plugins {
    id 'com.android.library'
}

ext {
    VERSION_CODE = 2
    VERSION_NAME = "1.0.1"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode VERSION_CODE
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

ext {
    // This should be same as you've created in bintray
    bintrayRepo = 'AndroidWifiManager'

    // Name which will be visible on bintray
    bintrayName = 'APManager'

    // Library Details
    publishedGroupId = 'com.vkpapps.wifimanager'
    libraryName = 'Access Point Manager'
    artifact = 'APManager'
    libraryDescription = 'Access Point Manager Library'
    libraryVersion = VERSION_NAME
    version(VERSION_NAME)

    // Repository Link (For e.g. GitHub repo)
    siteUrl = 'https://github.com/vijaypatidar/AndroidWifiManager'
    gitUrl = 'https://github.com/vijaypatidar/AndroidWifiManager.git'
    githubRepository= 'vijaypatidar/AndroidWifiManager'

    // Developer Details
    developerId = 'vijaypatidar'
    developerName = 'Vijay Patidar'
    developerEmail = 'vkramotiya987@gmail.com'

    // License Details
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// Avoid Kotlin docs error
tasks.withType(Javadoc) {
    enabled = false
}

// Remove javadoc related tasks
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    getArchiveClassifier().set( 'sources')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set( 'javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
